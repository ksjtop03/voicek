mysql 5.5이상버전부터는 InnoDB 스토리지 엔진을 사용하며

테이블 생성 시 엔진 옵션을 주지 않으면 디폴트 InnoDB 이고
MyISAM 혹은 HEAP, MEMORY 엔진타입으로 생성하게 될 경우 테이블 생성 시 옵션을 주면 된다.

create table 테이블명 (타입 .....) ENGINE=InnoDB;

create table 테이블명 (타입 .....) ENGINE=MyISAM;
create table 테이블명 (타입 .....) ENGINE=MEMORY;
create table 테이블명 (타입 .....) ENGINE=HEAP;

--single-transaction 옵션은 서버로부터 데이터를 덤프하기 전에 BEGIN SQL 커맨드를 발행한다
InnoDB 테이블과 READ_COMMITTED 트랜잭션 분리 레벨로 특별히 도움이 된다.

이 모드에서는, 어느 어플리케이션도 블록하는 일이 없어, BEGIN이 발행되었을 때의 데이터베이스의 정합한 상태를 덤프할 수 있다
이 옵션을 사용할 때는, 트랜잭션 테이블만 정합 상태로 덤프 되는 것에 주의한다.

예를들면, 이 옵션으로 덤프 된 MyISAM 테이블 또는 HEAP 테이블은 변경되고 있을 가능성이 있다
--single-transaction 옵션은 버전 4.0.2으로 추가되었다.

이 옵션은 --lock-tables 옵션과 상호 배타적이다. LOCK TABLES는, 전의 트랜잭션을 벌써 위탁하고 있기 때문이다


참고)
MySQL도 Tibero나 Altibase와 같이 메모리 데이터베이스로 사용할 수 있다.
--실제 공공기관에 구축해서 고성능을 발휘한 사례 존재

x86서버에 허용하는 최대 메모리를 꽂아놓고 약 8~90GB에 달하는 데이터를 메모리에 올려 서비스했었습니다.
테이블 생성 시 주는 옵션과 똑같고 엔진 타입만 MEMORY 또는 HEAP 이라고 지정

CREATE TABLE 테이블명 ( 타입 ..... ) ENGINE=MEMORY;

Hash 인덱스를 기본으로 사용해 아주 빠르고, 당연히 서버가 다운되면 데이터는 날라 감.
(테이블 스키마는 남음) 임시 테이블이나 고정 데이터용으로 적합
데이터 전체를 파일로 보관했다가 DB가 재시작할 때 로드할 수 있게 하거나
혹은 Master-Slave로 구성하여 Master가 재시작할 때 Slave의 데이터를 동기화하는 방법이 있음


PPAS에는 아카이브라는 개념이 있지만 MySQL에는 아카이브라는 개념이 없고 binlog

PPAS는 풀백업스크립트 begin을 찍으면 end값을 찍고 그 이전 데이터를 백업받고 그 외 추가/변경된 값은 pg_xlog 에 찍는다
MySQL은 아카이브라는 개념이 없어 begin을 찍는 시점부터 이후 데이터를 백업받는다.

=====================================================================================================================================================
■ MyISAM
- 항상 테이블에 row count를 가지고 있기 때문에 select count(*) 명령 시 빠르다
- select 명령시에도 빠른 속도를 자랑한다
- FULL-TEXT 인덱스를 지원하여 검색 엔진과 유사한 방법으로 자연 언어를 이용해 검색할 수 있는 특별한 인덱스로 모든 데이터 문자열으 단어를 저장한다.
- 그렇기 때문에 READ-ONLY 기능이 많은 서비스일수록 MyISAM 엔진이 효율적이라 할 수 있다

- 단점으로는, row level locking을 지원하지 못해, select / insert / update / delete 시 해당 table 전체에 locking이 걸린다.
* row의 수가 커지면 커질수록 속도는 엄청나게 느려진다)



-백업 시 lock없이 dump하는 옵션
옵션 : --lock-tables=false

=====================================================================================================================================================
■ InnoDB
- 트랜잭션을 지원하므로 트랜잭션-세이프 스토리지 엔진에 해당된다.
- commit, rollback, 장애복구, row-level locking, 외래키 등 다양한 기능을 지원한다
- 


-백업 시 lock없이 dump하는 옵션
옵션 : --single-transaction



=====================================================================================================================================================